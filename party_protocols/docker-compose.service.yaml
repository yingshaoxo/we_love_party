version: "3.9"

services:
  traefik:
    image: "traefik:v3.0.0-beta2" #"traefik:v2.9.6"
    container_name: "traefik"
    command:
      - "--accesslog=true"
      # - "--accessLog.filePath=/tmp/traefik_log.txt"
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.file.directory=/traefik_dynamic_configs"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      # - "443:443"
      #- "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./configs/traefik_dynamic_configs:/traefik_dynamic_configs" # <== Volume for dynamic conf file
    restart: unless-stopped

  whoami:
    image: "traefik/whoami"
    expose: #expose port to other container by using http://whoami:80
      - "80"
    restart: unless-stopped

  weloveparty_internal_api_service:
    build: 
      context: ../rust_internal_api_system
      dockerfile: ./Dockerfile
    image: yingshaoxo/weloveparty_internal_api_service
    expose:
      - "40050:40050"
    # ports:
    #   - "40050:40050"
    environment: 
      - redis_network_name=redis
      - postgres_sql_host=db
      - postgres_sql_user=yingshaoxo
      - postgres_sql_password=yingshaoxo
    restart: unless-stopped

  weloveparty_account_auth_service:
    build: 
      context: ../python_user_auth_system
      dockerfile: ./Dockerfile
    image: yingshaoxo/weloveparty_account_auth_service
    expose:
      - "40051"
      - "40052"
    # ports:
    #   - "40051:40051"
    #   - "40052:40052"
    volumes:
      - type: bind
        source: ./configs/python_user_auth_system/o365_token.txt
        target: /code/o365_token.txt
      - type: bind
        source: ./configs/python_user_auth_system/config.py
        target: /code/src/config.py
      - type: bind
        source: ./configs/python_user_auth_system/user_database
        target: /code/data
    environment: 
      - redis_network_name=redis
    restart: unless-stopped

  weloveparty_account_storage_service:
    build: 
      context: ../golang_user_storage_system
      dockerfile: ./Dockerfile
    image: yingshaoxo/weloveparty_golang_user_storage_system
    expose:
      - "40053"
    # ports:
    #   - "40053:40053"
    environment: 
      - redis_network_name=redis
      - postgres_sql_host=db
      - postgres_sql_user=yingshaoxo
      - postgres_sql_password=yingshaoxo
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      - GRPC_GO_LOG_VERBOSITY_LEVEL=0
    restart: unless-stopped

  weloveparty_room_control_service:
    build: 
      context: ../typescript_room_controller
      dockerfile: ./Dockerfile
    image: yingshaoxo/weloveparty_room_control_service
    expose:
      - "40054"
    # ports:
    #   - "40054"
    environment: 
      - redis_network_name=redis
      - livekit_NETWORK_NAME=livekit
      # - weloveparty_internal_api_service_NETWORK_NAME=weloveparty_internal_api_service
      - livekit_key=APIDtk2LyAaZPWA
      - livekit_value=LXo3sftMbII4YqV4bawJu1MrsfL1oOfjexZkqrGm1pkA
    restart: unless-stopped

  weloveparty_free_map_service:
    build: 
      context: ../java_free_map_backend_system
      dockerfile: ./Dockerfile
    image: yingshaoxo/weloveparty_free_map_backend_service
    expose:
      - "40055"
    # ports:
    #   - "40055:40055"
    # volumes:
    #   - type: bind
    #     source: ./configs/python_chat_with_friends_system/config.py
    #     target: /code/src/config.py
    environment: 
      - redis_network_name=redis
      - postgres_sql_host=db
      - postgres_sql_user=yingshaoxo
      - postgres_sql_password=yingshaoxo
    restart: unless-stopped

  weloveparty_chat_with_friends_service:
    build: 
      context: ../python_chat_with_friends_system
      dockerfile: ./Dockerfile
    image: yingshaoxo/weloveparty_chat_with_friends_service
    expose:
      - "40056"
    # ports:
    #   - "40056:40056"
    volumes:
      - type: bind
        source: ./configs/python_chat_with_friends_system/config.py
        target: /code/src/config.py
    environment: 
      - MONGO_DB_URL=mongodb://yingshaoxo:yingshaoxo@my_mongo:27017/
      - POSTGRESQL_DB_URL=postgresql://yingshaoxo:yingshaoxo@db:5432/postgres
    restart: unless-stopped

  livekit:
    image: livekit/livekit-server:v1.3
    command: 
      - "--config=/etc/livekit.yaml"
      - "--node-ip=144.202.109.163"
    # network_mode: "host"
    # expose:
    #   - "80"
    #   - "443"
    ports:
      - '7880/tcp'
      - '7881/tcp'
      # - '5349:5349/tcp'
      # - '5349:5349/udp'
      # - "50000-60000:50000-60000/udp"
      - "50000-50100:50000-50100/udp"
    volumes:
      - ./configs/livekit.yaml:/etc/livekit.yaml
    restart: unless-stopped

  management_service:
    build: 
      context: ../management_system/golang_backend_service
      dockerfile: ./Dockerfile
    image: yingshaoxo/management_system/golang_backend_service
    expose:
      - "40057"
    # ports:
    #   - "40057:40057"
    # volumes:
    #   - type: bind
    #     source: ./configs/python_chat_with_friends_system/config.py
    #     target: /code/src/config.py
    environment: 
      - postgres_sql_host=db
      - postgres_sql_user=yingshaoxo
      - postgres_sql_password=yingshaoxo
      - redis_host=redis
      - redis_port=6379
      - redis_db_number=1
    restart: unless-stopped