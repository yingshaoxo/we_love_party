version: "3.9"

services:
  traefik:
    image: "traefik:v3.0.0-beta2" #"traefik:v2.9.6"
    container_name: "traefik"
    command:
      # - "--accesslog=true"
      # - "--accessLog.filePath=/tmp/traefik_log.txt"
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.file.directory=/traefik_dynamic_configs"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./configs/traefik_dynamic_configs:/traefik_dynamic_configs" # <== Volume for dynamic conf file

  whoami:
    image: "traefik/whoami"
    expose: #expose port to other container by using http://whoami:80
      - "80"
    restart: unless-stopped

  dragonfly: # the new redis
    image: docker.dragonflydb.io/dragonflydb/dragonfly:v0.12.0
    command:
      - "--save_schedule=*:05" # save for every 1 minute
      - "--dbfilename=/data/dump.rdb"
    ports:
      - '6379:6379'
    volumes:
      - "./configs/redis_data:/data"
    restart: unless-stopped
  
  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=yingshaoxo
      - POSTGRES_PASSWORD=yingshaoxo
    ports:
      - '5432:5432'
    volumes: 
      - ./configs/postgre_sql_db:/var/lib/postgresql/data
  
  # weloveparty_internal_api_service:
  #   build: 
  #     context: ../rust_internal_api_system
  #     dockerfile: ./Dockerfile
  #   image: yingshaoxo/weloveparty_internal_api_service
  #   expose:
  #     - "40050"
  #   # ports:
  #   #   - "40050:40050"
  #   environment: 
  #     - redis_network_name=dragonfly
  #     - postgres_sql_host=db
  #     - postgres_sql_user=yingshaoxo
  #     - postgres_sql_password=yingshaoxo
  #   restart: unless-stopped

  weloveparty_account_auth_service:
    build: 
      context: ../python_user_auth_system
      dockerfile: ./Dockerfile
    image: yingshaoxo/weloveparty_account_auth_service
    expose:
      - "40051"
      - "40052"
    # ports:
    #   - "40051:40051"
    #   - "40052:40052"
    volumes:
      - type: bind
        source: ./configs/o365_token.txt
        target: /code/o365_token.txt
      - type: bind
        source: ./configs/config.py
        target: /code/src/config.py
      - ./configs/user_database:/code/data
    environment: 
      - redis_network_name=dragonfly
    restart: unless-stopped

  # weloveparty_account_storage_service:
  #   build: 
  #     context: ../golang_user_storage_system
  #     dockerfile: ./Dockerfile
  #   image: yingshaoxo/weloveparty_golang_user_storage_system
  #   expose:
  #     - "40053"
  #   # ports:
  #   #   - "40053:40053"
  #   environment: 
  #     - redis_network_name=dragonfly
  #     - postgres_sql_host=db
  #     - postgres_sql_user=yingshaoxo
  #     - postgres_sql_password=yingshaoxo
  #     - GRPC_GO_LOG_SEVERITY_LEVEL=info
  #     - GRPC_GO_LOG_VERBOSITY_LEVEL=0
  #   restart: unless-stopped

  # livekit:
  #   image: livekit/livekit-server:v1.3
  #   command: --config /etc/livekit.yaml
  #   network_mode: "host"
  #   ports:
  #     - '7880'
  #     - '7881'
  #     - '5349'
  #     - "443:443/udp"
  #     #- "50000-60000:50000-60000"
  #   volumes:
  #     - ./configs/livekit.yaml:/etc/livekit.yaml
  #   restart: unless-stopped